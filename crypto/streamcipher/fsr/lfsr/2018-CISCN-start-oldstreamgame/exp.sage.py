
# This file was *autogenerated* from the file exp.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_0b10100100000010000000100010010100 = Integer(0b10100100000010000000100010010100); _sage_const_8 = Integer(8); _sage_const_31 = Integer(31); _sage_const_32 = Integer(32)
from sage.all import *

mask = _sage_const_0b10100100000010000000100010010100 

N = _sage_const_32 
F = GF(_sage_const_2 )

b = ''
with open('key', 'rb') as f:
    b = f.read()

R = [vector(F, N) for i in range(N)]
for i in range(N):
    R[i][N - _sage_const_1 ] = mask >> (_sage_const_31  - i) & _sage_const_1 
for i in range(N - _sage_const_1 ):
    R[i + _sage_const_1 ][i] = _sage_const_1 
M = Matrix(F, R)
M = M ** N

vec = vector(F, N)
row = _sage_const_0 
for i in range(N / _sage_const_8 ):
    t = ord(b[i])
    for j in xrange(_sage_const_7 , -_sage_const_1 , -_sage_const_1 ):
        vec[row] = t >> j & _sage_const_1 
        row += _sage_const_1 
print rank(M)
num = int(''.join(map(str, list(M.solve_left(vec)))), _sage_const_2 )
print hex(num)

