
from sage.all import *

n=359793065708835171342012982403389538721788606457645856715487227577194526064798303818572407032975833936178199713595331846778102841997912700946265231285246024230663051859876335242072374004279978008125992004515027281010928770488746000301666740722019469328342218484337725625411326416836525568083940937252398788555611188099231630860828419152057201221L

e = 65537L

part1 = 2305567963945518424753102147331756070

def high_bits_known(pbar):
    beta = 0.3
    kbits = 256
    PR.<x> = PolynomialRing(Zmod(n))
    f = x + pbar
    x0 = f.small_roots(X=2^kbits, beta=beta)
    return x0

for x in xrange(1000, 9999):
    if x % 100 == 0:
        print 'try ',x
    tmp = part1+x
    pbar = tmp*(2**512)
    p = high_bits_known(pbar)
    if len(p) > 0:
        p = ZZ(p[0] + pbar)
        if n % p == 0:
            print "!!!Found!!!"
            print "p: ",p
            print "q: ",n/p