


Gadgets
=======


0x00000000004005ae: adc byte ptr [rax], ah; jmp rax; 
0x00000000004005ad: adc byte ptr [rax], spl; jmp rax; 
0x000000000040057f: add bl, dh; ret; 
0x00000000004005a5: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax; 
0x00000000004005e7: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax; 
0x00000000004004f2: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004007ad: add byte ptr [rax], al; add bl, dh; ret; 
0x00000000004005a3: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax; 
0x00000000004005e5: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax; 
0x00000000004007ab: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; ret; 
0x0000000000400662: add byte ptr [rax], al; add byte ptr [rax], al; call 0x540; nop; leave; ret; 
0x0000000000400727: add byte ptr [rax], al; add byte ptr [rax], al; call 0x637; mov eax, 0; leave; ret; 
0x0000000000400731: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x0000000000400732: add byte ptr [rax], al; add cl, cl; ret; 
0x0000000000400664: add byte ptr [rax], al; call 0x540; nop; leave; ret; 
0x0000000000400729: add byte ptr [rax], al; call 0x637; mov eax, 0; leave; ret; 
0x0000000000400733: add byte ptr [rax], al; leave; ret; 
0x00000000004005b6: add byte ptr [rax], al; pop rbp; ret; 
0x00000000004007b2: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x00000000004005a4: add byte ptr [rax], al; test rax, rax; je 0x5b8; pop rbp; mov edi, 0x601048; jmp rax; 
0x00000000004005e6: add byte ptr [rax], al; test rax, rax; je 0x5f8; pop rbp; mov edi, 0x601048; jmp rax; 
0x00000000004005b5: add byte ptr [rax], r8b; pop rbp; ret; 
0x0000000000400617: add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000400734: add cl, cl; ret; 
0x00000000004004ee: add eax, 0x200b05; test rax, rax; je 0x4fa; call rax; 
0x00000000004004ee: add eax, 0x200b05; test rax, rax; je 0x4fa; call rax; add rsp, 8; ret; 
0x00000000004004ef: add eax, 0x4800200b; test eax, eax; je 0x4fa; call rax; 
0x00000000004004ef: add eax, 0x4800200b; test eax, eax; je 0x4fa; call rax; add rsp, 8; ret; 
0x00000000004004fb: add esp, 8; ret; 
0x00000000004004fa: add rsp, 8; ret; 
0x00000000004004f1: and byte ptr [rax], al; test rax, rax; je 0x4fa; call rax; 
0x00000000004004f1: and byte ptr [rax], al; test rax, rax; je 0x4fa; call rax; add rsp, 8; ret; 
0x0000000000400721: call 0x510; mov eax, 0; call 0x637; mov eax, 0; leave; ret; 
0x0000000000400666: call 0x540; nop; leave; ret; 
0x000000000040060d: call 0x590; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x000000000040072b: call 0x637; mov eax, 0; leave; ret; 
0x000000000040086b: call qword ptr [rax]; 
0x00000000004004f8: call rax; 
0x00000000004004f8: call rax; add rsp, 8; ret; 
0x0000000000400711: dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x000000000040078c: fmul qword ptr [rax - 0x7d]; ret; 
0x00000000004004ea: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x200b05; test rax, rax; je 0x4fa; call rax; 
0x00000000004004f6: je 0x4fa; call rax; 
0x00000000004004f6: je 0x4fa; call rax; add rsp, 8; ret; 
0x00000000004005a9: je 0x5b8; pop rbp; mov edi, 0x601048; jmp rax; 
0x00000000004005eb: je 0x5f8; pop rbp; mov edi, 0x601048; jmp rax; 
0x00000000004008d3: jmp qword ptr [rbp]; 
0x00000000004005b1: jmp rax; 
0x00000000004007f3: jmp rsp; 
0x000000000040066c: leave; ret; 
0x0000000000400612: mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x0000000000400726: mov eax, 0; call 0x637; mov eax, 0; leave; ret; 
0x0000000000400730: mov eax, 0; leave; ret; 
0x00000000004004ed: mov eax, dword ptr [rip + 0x200b05]; test rax, rax; je 0x4fa; call rax; 
0x00000000004004ed: mov eax, dword ptr [rip + 0x200b05]; test rax, rax; je 0x4fa; call rax; add rsp, 8; ret; 
0x000000000040060b: mov ebp, esp; call 0x590; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x0000000000400661: mov edi, 0; call 0x540; nop; leave; ret; 
0x00000000004005ac: mov edi, 0x601048; jmp rax; 
0x000000000040065f: mov esi, eax; mov edi, 0; call 0x540; nop; leave; ret; 
0x00000000004004ec: mov rax, qword ptr [rip + 0x200b05]; test rax, rax; je 0x4fa; call rax; 
0x00000000004004ec: mov rax, qword ptr [rip + 0x200b05]; test rax, rax; je 0x4fa; call rax; add rsp, 8; ret; 
0x000000000040060a: mov rbp, rsp; call 0x590; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x000000000040065e: mov rsi, rax; mov edi, 0; call 0x540; nop; leave; ret; 
0x00000000004005b3: nop dword ptr [rax + rax]; pop rbp; ret; 
0x00000000004005f5: nop dword ptr [rax]; pop rbp; ret; 
0x000000000040066b: nop; leave; ret; 
0x0000000000400615: or ah, byte ptr [rax]; add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004004eb: or byte ptr [rax - 0x75], cl; add eax, 0x200b05; test rax, rax; je 0x4fa; call rax; 
0x00000000004005ec: or ebx, dword ptr [rbp - 0x41]; adc byte ptr [rax], spl; jmp rax; 
0x00000000004004f0: or esp, dword ptr [rax]; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000400614: or r12b, byte ptr [r8]; add byte ptr [rcx], al; pop rbp; ret; 
0x000000000040079c: pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040079e: pop r13; pop r14; pop r15; ret; 
0x00000000004007a0: pop r14; pop r15; ret; 
0x00000000004007a2: pop r15; ret; 
0x00000000004005ab: pop rbp; mov edi, 0x601048; jmp rax; 
0x000000000040079b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040079f: pop rbp; pop r14; pop r15; ret; 
0x00000000004005b8: pop rbp; ret; 
0x00000000004007a3: pop rdi; ret; 
0x00000000004007a1: pop rsi; pop r15; ret; 
0x000000000040079d: pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000000400609: push rbp; mov rbp, rsp; call 0x590; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x0000000000400714: ret 0x8d48; 
0x00000000004004fe: ret; 
0x00000000004005a8: sal byte ptr [rbp + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax; 
0x00000000004005ea: sal byte ptr [rbx + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax; 
0x00000000004004f5: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004007b5: sub esp, 8; add rsp, 8; ret; 
0x00000000004004e9: sub esp, 8; mov rax, qword ptr [rip + 0x200b05]; test rax, rax; je 0x4fa; call rax; 
0x00000000004007b4: sub rsp, 8; add rsp, 8; ret; 
0x00000000004004e8: sub rsp, 8; mov rax, qword ptr [rip + 0x200b05]; test rax, rax; je 0x4fa; call rax; 
0x00000000004004f4: test eax, eax; je 0x4fa; call rax; 
0x00000000004004f4: test eax, eax; je 0x4fa; call rax; add rsp, 8; ret; 
0x00000000004005a7: test eax, eax; je 0x5b8; pop rbp; mov edi, 0x601048; jmp rax; 
0x00000000004005e9: test eax, eax; je 0x5f8; pop rbp; mov edi, 0x601048; jmp rax; 
0x00000000004004f3: test rax, rax; je 0x4fa; call rax; 
0x00000000004004f3: test rax, rax; je 0x4fa; call rax; add rsp, 8; ret; 
0x00000000004005a6: test rax, rax; je 0x5b8; pop rbp; mov edi, 0x601048; jmp rax; 
0x00000000004005e8: test rax, rax; je 0x5f8; pop rbp; mov edi, 0x601048; jmp rax; 

100 gadgets found
